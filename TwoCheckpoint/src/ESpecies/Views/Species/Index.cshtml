@model PaginatedList<ESpecies.Models.Species>

@{
    ViewData["Title"] = "Index";
}

<h2>Endangered Species Index</h2>

<p>
    <a asp-action="Create">Create New Entry</a>
</p>

<form asp-action="Index" method="get">
    <div class="form-actions no-color">
        <p>
            Find by name: <input type="text" name="SearchString" value="@ViewData["CurrentFilter"]" />
            <input type="submit" value="Search" class="btn btn-default btn" /> |
            <a asp-action="Index">Back to Full List</a>
        </p>
    </div>
</form>

<table class="table">
    <thead>
        <tr>
            @*<th>
                    ComName
                </th>*@
            <th>
                <a asp-action="Index" asp-route-sortOrder="@ViewData["NameSortParm"]" asp-route-currentFilter="@ViewData["CurrentFilter"]">Common Name</a>
            </th>
            <th>
                <a asp-action="Index" asp-route-sortOrder="@ViewData["DateSortParm"]" asp-route-currentFilter="@ViewData["CurrentFilter"]">Listing Date</a>
            </th>
            <th></th>
        </tr>
    </thead>
    <tbody>
        @foreach (var item in Model)
        {
            <tr>
                <td>
                    @Html.DisplayFor(modelItem => item.ComName)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.ListingDate)
                </td>

                <td>
                        @Html.DisplayFor(modelItem => item.CountryId)
                    </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Description)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.EntityId)
                </td>

                <td>
                        @Html.DisplayFor(modelItem => item.PopAbbrev)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.PopDesc)
                    </td>
                <td>
                    @Html.DisplayFor(modelItem => item.SciName)
                </td>
                <td>
                        @Html.DisplayFor(modelItem => item.SpCode)
                    </td>
                <td>
                    @Html.DisplayFor(modelItem => item.StatusId)
                </td>
                <td>
                        @Html.DisplayFor(modelItem => item.TSN)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.VipCode)
                    </td>
                <td>
                    <a asp-action="Edit" asp-route-id="@item.Id">Edit</a> |
                    <a asp-action="Details" asp-route-id="@item.Id">Details</a> |
                    <a asp-action="Delete" asp-route-id="@item.Id">Delete</a>
                </td>
            </tr>
        }
    </tbody>
</table>

@{
    var prevDisabled = !Model.HasPreviousPage ? "disabled" : "";
    var nextDisabled = !Model.HasNextPage ? "disabled" : "";

}

<a asp-action="Index"
   asp-route-sortOrder="@ViewData["CurrentSort"]"
   asp-route-page="@(Model.PageIndex - 1)"
   asp-route-currentFilter="@ViewData["CurrentFilter"]"
   class="btn btn-default @prevDisabled btn">
    Previous
</a>
<a asp-action="Index"
   asp-route-sortOrder="@ViewData[" CurrentSort"]"
   asp-route-page="@(Model.PageIndex + 1)"
   asp-route-currentFilter="@ViewData["CurrentFilter"]"
   class="btn btn-default @nextDisabled btn">
    Next
</a>
